// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProviderSystemManager.DAL.Database;

#nullable disable

namespace ProviderSystemManager.DAL.Migrations
{
    [DbContext(typeof(ProviderDbContext))]
    [Migration("20220521234648_initialize")]
    partial class initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Abonent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbonentTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AbonentTypeId");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Abonents");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.AbonentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("AbonentTypes");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbonentId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ConnectionCost")
                        .HasColumnType("numeric");

                    b.Property<DateOnly>("ConnectionDate")
                        .HasColumnType("date");

                    b.Property<int>("FirmId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ForwardingCost")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AbonentId");

                    b.HasIndex("FirmId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Firm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<int>("OwnTypeId")
                        .HasColumnType("integer");

                    b.Property<short>("StartWorkingYear")
                        .HasColumnType("smallint");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.HasIndex("OwnTypeId");

                    b.ToTable("Firms");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.OwnType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("OwnTypes");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AbonentId")
                        .HasColumnType("integer");

                    b.Property<int>("FirmId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("RecievingDate")
                        .HasColumnType("date");

                    b.Property<double>("Size")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AbonentId");

                    b.HasIndex("FirmId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Abonent", b =>
                {
                    b.HasOne("ProviderSystemManager.DAL.Models.AbonentType", "AbonentType")
                        .WithMany("Abonents")
                        .HasForeignKey("AbonentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AbonentType");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Contract", b =>
                {
                    b.HasOne("ProviderSystemManager.DAL.Models.Abonent", "Abonent")
                        .WithMany("Contracts")
                        .HasForeignKey("AbonentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProviderSystemManager.DAL.Models.Firm", "Firm")
                        .WithMany("Contracts")
                        .HasForeignKey("FirmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abonent");

                    b.Navigation("Firm");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Firm", b =>
                {
                    b.HasOne("ProviderSystemManager.DAL.Models.OwnType", "OwnType")
                        .WithMany("Firms")
                        .HasForeignKey("OwnTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnType");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Service", b =>
                {
                    b.HasOne("ProviderSystemManager.DAL.Models.Abonent", "Abonent")
                        .WithMany("Services")
                        .HasForeignKey("AbonentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProviderSystemManager.DAL.Models.Firm", "Firm")
                        .WithMany("Services")
                        .HasForeignKey("FirmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abonent");

                    b.Navigation("Firm");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Abonent", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.AbonentType", b =>
                {
                    b.Navigation("Abonents");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.Firm", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("ProviderSystemManager.DAL.Models.OwnType", b =>
                {
                    b.Navigation("Firms");
                });
#pragma warning restore 612, 618
        }
    }
}
